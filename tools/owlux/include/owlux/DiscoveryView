/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see Owlux/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <owlux/YeelightStatus>
#include <cc/View>

namespace cc::owlux {

using namespace cc;

/** \brief Show a list of automatically discovered smart lights
  *
  * The DiscoveryView actively scans the network once and thereafter keeps listening for device announcements.
  * It allows to switch lights on and off.
  *
  * \todo use the Icon::LightSwitch for the application bar navigation icon?!
  */
class DiscoveryView final: public View
{
public:
    /** Create a primordial discovery view
      */
    DiscoveryView();

    /** Get a weak reference in \a self
      */
    DiscoveryView &associate(Out<DiscoveryView> self);

    /** Setup function to call when a devce is selected by the user
      */
    DiscoveryView &onSelected(Fun<void(const YeelightStatus &status)> &&f);

private:
    struct State;

    State &me();
    const State &me() const;
};

} // namespace cc::owlux
