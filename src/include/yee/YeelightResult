#pragma once

#include <yee/YeelightResponse>
#include <cc/Variant>

namespace cc { class MetaObject; }

namespace cc::yee {

class YeelightResult final: public YeelightResponse
{
public:
    static bool recognise(const MetaObject &message);

    YeelightResult() = default;

    explicit YeelightResult(const MetaObject &message);
    explicit YeelightResult(const YeelightResponse &response);

    long commandId() const;

    bool isError() const;
    const Map<String, Variant> &errorDetails() const;
    int errorCode() const;
    String errorMessage() const;

    bool isOk() const;
    const List<Variant> &values() const;

private:
    friend class Object;

    struct State;

    const State &me() const;
};

} // namespace cc::yee
